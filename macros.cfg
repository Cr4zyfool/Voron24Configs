#####################################################################
#	Macros
#####################################################################

[gcode_macro test]
variable_bucket_pos: 1  #placeholder
gcode:
    RESPOND MSG="Testing"
    #SET_GCODE_VARIABLE MACRO=test VARIABLE=bucket_pos VALUE={(range(2) | random)}
    #SET_GCODE_VARIABLE MACRO=test VARIABLE=bucket_pos VALUE=5 #{printer.toolhead.axis_maximum.x/2}
    #RESPOND MSG={bucket_pos}
    #RESPOND MSG={printer.toolhead.axis_maximum.x/2}
    #RESPOND MSG = {printer.toolhead.axis_minimum.y+5}
    action_respond_info("Pause zhop exceeds maximum Z height.")
    { action_respond_info("Pause zhop exceeds maximum Z height.") }

[gcode_macro G32]
gcode:
    G28
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    BED_MESH_PROFILE LOAD=default
    G28 X Y
    #CLEAN_NOZZLE                   #Not yet Implemented
    G28 Z
    G90                            ; absolute positioning
    G0 X150 Y150 Z30 F6000         ; return to center of bed

    #--------------------------------------------------------------------

#TEMPERATURE_WAIT SENSOR="temperature_fan exhaust_fan" MINIMUM=45

######################### PRINT START / END #########################

[gcode_macro PRINT_START]
    ##SLICER GCODE USAGE
    ##PRINT_START BED={first_layer_bed_temperature} HOTEND={first_layer_temperature} CHAMBER={chamber_temperature}

## for setting variables allowing use in other macros, print_end etc. (placed above gcode line)
#variable_bedtemp: 0
#variable_hotendtemp: 0
#variable_chambertemp: 0

gcode:
	## Set Variables
	{% set v_bedtemp = params.BED|int %}
	{% set v_hotendtemp = params.HOTEND|int %}
	{% set v_chambertemp = params.CHAMBER|default(0)|int %}

	G90 #set absolute positioning
    BED_MESH_CLEAR #clear bed mesh
    M104 S140 #set hotend to no-ooze temp
    M140 S{v_bedtemp} #set bed to target temp
	G28 #home all axis
    M117 Bed-Heating #set message on display
    M190 S{v_bedtemp} #wait for bed final temp

    Attach_Probe_Lock #prevent probe docking until unlocked (Klicky)
    M117 QGL #set message on display
	QUAD_GANTRY_LEVEL #V2.4
    G28 Z #rehome Z axis
    M117 BMC #set message on display
    BED_MESH_CALIBRATE #generate new mesh

    G0 X150 Y150 Z100 F5000 #park nozzle for easy access/cleaning
    M117 HE-Heating #set message on display
    M109 S{v_hotendtemp} #heat nozzle (and wait) for auto-z calibration
    M117 #clear message on display

    CLEAN_NOZZLE #requires brush/purge bucket, from decontaminator
    CALIBRATE_Z #automatic Z offset, from Klicky Mod z-calibration
    Dock_Probe_Unlock #removes probe lock (Klicky)

[gcode_macro PRINT_END]
gcode:
    # Set safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    CLEAR_PAUSE #clear pause (from M191) if there is one
    M400 #wait for buffer to clear
    G92 E0 #zero the extruder
    G1 E-5 F2400 #retract filament 5mm

    G90 #absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000 #move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600 #park nozzle at rear
    {% if (th.position.z < 100) %} #if Z <100, raise it up to 100 height
	    G0 Z100 F3600
    {% endif %}

    G4 P20000 #Delay 20 seconds for filament to have time to ooze out and prepare for next print.

    TURN_OFF_HEATERS #turn off all heaters
    M107 #turn off part cooling fan
    BED_MESH_CLEAR #Clear bed mesh
    #UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120 #turn exhaust off in 2 min
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####################################################################################################

[delayed_gcode EXHAUST_OFF]
gcode:
	SET_FAN_SPEED FAN=Exhaust SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
	OFF  																								; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)
	 
[gcode_macro PURGE_LINE]
gcode:
    G90 													 											; absolute positioning
    #RESPOND MSG="PurgeLine Ensure HotEnd is at 245"
    #M109 S245																							; Make sure extruder is at temp in case macro is called separately.  Set and Wait
    G92 E0                              																; reset Extruder
	G1 X5 Y20 Z0.25 F19500.0           																	; move to start position
	G1 X5 Y200.0 Z0.25 F1500.0 E15     																	; draw the first line
	G92 E0                              																; reset Extruder
	G1 Z2.0 F3000                       																; move Z Axis up

[gcode_macro PURGE1]
gcode:
    G90 #absolute positioning
    #RESPOND MSG="PurgeLine Ensure HotEnd is at 245"
    #M109 S245 #Make sure extruder is at temp in case macro is called separately.  Set and Wait
    G92 E0                              																; reset Extruder
	G1 X20 Y0 Z0.25 F19500.0           																	; move to start position
	G1 X200 Y0 Z0.25 F1500.0 E15     																	; draw the first line
	G92 E0                              																; reset Extruder
	G1 Z2.0 F3000                       																; move Z Axis up
    PARKFRONTLOW


######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
	G1 E10 F600                           ; extrude a little to soften tip 
	G1 E-100 F1800                        ; retract filament completely
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro RETRACT_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 #set extruder to relative
	G1 E-40 F1800
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
	G1 E90 F500 #load 90mm
    G1 E-5 F1000 #retract filament 5mm
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro HOT_UNLOAD]
gcode:
	# Parameters
	{% set t = params.T|default(245)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    UNLOAD_FILAMENT
	
[gcode_macro HOT_LOAD]
gcode:
	# Parameters
	{% set t = params.T|default(245)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    LOAD_FILAMENT


######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}
	
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}

######################### PAUSE/RESUME/CANCEL #########################
[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

#  #default is in mainsail.cfg
# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#     SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#     CLEAR_PAUSE
#     SDCARD_RESET_FILE
#     PRINT_END
#     BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set x_park = printer.toolhead.axis_maximum.x/2 %}
  {% set y_park = printer.toolhead.axis_minimum.y+5 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 10.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G92 E0
  {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
    G1 E-1.0 F1500.0 #Retract 1mm
  {% else %}     
    RESPOND MSG="DeBug: Retraction Skipped due to Cold Hotend (Testing)"
  {% endif %}  
  G90 #absolute positioning
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91 #relative positioning
  G1 Z{z_safe} F900
  G90 #absolute positioning
  G0 X{x_park} Y{y_park} F6000 #park toolhead

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  RESTORE_GCODE_STATE NAME=PAUSE_state
  G90 #absolute positioning
  BASE_RESUME

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# gcode:
#     # Parameters
#     {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
#     {% if printer['pause_resume'].is_paused|int == 0 %}     
#         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
#         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
#         #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
#         SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
#         BASE_PAUSE                                                                           ; pause print
#         {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
#             G91                                                                              ; relative positioning
#             G1 Z{z} F900                                                                     ; raise Z up by z hop amount
#         {% else %}
#             { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
#             SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
#         {% endif %}
#         G90                                                                                  ; absolute positioning
#         G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
#         SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
#         M104 S0                                                                              ; turn off hotend
#         SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
#     {% endif %}

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# variable_zhop: 0
# variable_etemp: 0
# gcode:
#     # Parameters
#     {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
#     {% if printer['pause_resume'].is_paused|int == 1 %}
#         #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
#         #RESETRGB                                                                    ; reset LCD color
#         SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
#         {% if etemp > 0 %}
#             M109 S{etemp|int}                                                        ; wait for hotend to heat back up
#         {% endif %}
#         RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
#         G91                                                                          ; relative positioning
#         M83                                                                          ; relative extruder positioning
#         {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
#             G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
#         {% else %}                      
#             G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
#         {% endif %}                             
#         RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
#         BASE_RESUME                                                                  ; resume print
#     {% endif %}




######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500		
	RESTORE_GCODE_STATE NAME=PARKFRONT

# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500										
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park top rear left
[gcode_macro PARKREAR]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKREAR
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500		
	RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER
	
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKBED
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500										
	RESTORE_GCODE_STATE NAME=PARKBED


######################### MISC #########################
[gcode_macro HEATSOAK]
gcode:
  G90 #set absolute positioning
  G28 #home all axis
  G0 X145 Y150 Z50 F3600 #Move hotend a sufficent distance from heated bed for heat soak
  M106 S205 #set parts fan to 80%, helps circulate chamber air
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110 #For ABS





######################### ALIASES/SHORTCUTS #########################

[gcode_macro QGL]
gcode:
	BED_MESH_CLEAR
	QUAD_GANTRY_LEVEL
	
[gcode_macro BMC]
gcode:
	BED_MESH_CALIBRATE
	
# Convert Marlin linear advance commands to SET_PRESSURE_ADVANCE.
# Used in conjunction with Marlin's linear advance calibration tool: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set k = params.K|default(0)|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={k}

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
	M84												; turn steppers off
    TURN_OFF_HEATERS								; turn bed / hotend off
    M107                         	   			 	; turn print cooling fan off
	SET_FAN_SPEED FAN=Exhaust SPEED=0  				; turn exhaust fan off
	SET_FAN_SPEED FAN=BedOuter SPEED=0				; bed fan off
	SET_FAN_SPEED FAN=BedInner SPEED=0				; bed fan off
	SET_PIN PIN=caselight VALUE=0					; turn light off
